{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","id","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","nanoid","props","onSubmit","reset","this","type","onChange","pattern","title","required","Component","ContactListItem","onDeleteContact","onClick","ContactList","items","map","protTypes","PropTypes","objectOf","string","func","Filter","onFilter","App","contacts","filter","formSubmitHandler","data","find","contact","toLowerCase","alert","filterContacts","filterToLowerCase","includes","filterHandler","deleteContact","contactId","prev","JSON","parse","localStorage","getItem","prevProps","prevState","setItem","stringify","filteredContacts","className","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb147bfb.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { nanoid } from 'nanoid';\n\nimport './ContactForm.module.css';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    id: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.setState(\n      {\n        id: nanoid(),\n      },\n      () => {\n        this.props.onSubmit(this.state);\n        this.reset();\n      },\n    );\n  };\n\n  reset = () => {\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit}>\n        <label>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={this.state.name}\n            onChange={this.handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n        <label>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={this.state.number}\n            onChange={this.handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n        <button>Add contact</button>\n      </form>\n    );\n  }\n}\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nimport './ContactListItem.module.css';\n\nfunction ContactListItem({ id, name, number, onDeleteContact }) {\n  return (\n    <li>\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\n\nimport ContactListItem from '../ContactListItem';\nimport './ContactList.module.css';\n\nconst ContactList = ({ items, onDeleteContact }) => {\n  return (\n    <ul>\n      {items.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.protTypes = {\n  items: PropTypes.objectOf(PropTypes.string),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nimport './Filter.module.css';\n\nconst Filter = ({ value, onFilter }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" value={value} onChange={onFilter} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { Component } from 'react';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nclass App extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidMount() {\n    const contacts = JSON.parse(localStorage.getItem('contacts'));\n\n    contacts && this.setState({ contacts: contacts });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { contacts } = this.state;\n\n    contacts !== prevState.contacts &&\n      localStorage.setItem('contacts', JSON.stringify(contacts));\n  }\n\n  formSubmitHandler = data => {\n    this.state.contacts.find(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n    )\n      ? alert('This name already in contacts')\n      : this.setState(({ contacts }) => {\n          return {\n            contacts: [...contacts, data],\n          };\n        });\n  };\n\n  filterContacts = () => {\n    const { filter, contacts } = this.state;\n    const filterToLowerCase = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterToLowerCase),\n    );\n  };\n\n  filterHandler = e => {\n    this.setState({ filter: e.currentTarget.value });\n  };\n\n  deleteContact = contactId => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const { filter } = this.state;\n    const filteredContacts = this.filterContacts();\n\n    return (\n      <div className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.formSubmitHandler} />\n        <h2>Contacts</h2>\n        <Filter value={filter} onFilter={this.filterHandler} />\n        <ContactList\n          items={filteredContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}