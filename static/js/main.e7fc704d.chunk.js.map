{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactListItem/ContactListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","onSubmit","useState","name","setName","number","setNumber","nanoid","id","setId","reset","e","preventDefault","type","value","onChange","currentTarget","pattern","title","required","ContactListItem","onDeleteContact","onClick","ContactList","items","map","Filter","onFilter","App","JSON","parse","window","localStorage","getItem","contacts","setContacts","filter","setFilter","useEffect","setItem","stringify","filteredContacts","filterToLowerCase","toLowerCase","contact","includes","filterContacts","className","data","find","alert","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uVA6DeA,MAtDf,YAAoC,IAAbC,EAAY,EAAZA,SACrB,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KACA,EAAoBJ,oBAAS,kBAAMK,iBAAnC,mBAAOC,EAAP,KAAWC,EAAX,KAUMC,EAAQ,WACZN,EAAQ,IACRE,EAAU,IACVG,EAAMF,gBAGR,OACE,uBAAMN,SAfa,SAAAU,GACnBA,EAAEC,iBAEFH,EAAMF,eACNN,EAAS,CAAEE,OAAME,SAAQG,OACzBE,KAUA,UACE,yCAEE,uBACEG,KAAK,OACLV,KAAK,OACLW,MAAOX,EACPY,SAAU,SAAAJ,GAAC,OAAIP,EAAQO,EAAEK,cAAcF,QACvCG,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAGZ,2CAEE,uBACEN,KAAK,MACLV,KAAK,SACLW,MAAOT,EACPU,SAAU,SAAAJ,GAAC,OAAIL,EAAUK,EAAEK,cAAcF,QACzCG,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,OAGZ,qD,MC5BSC,MApBf,YAAiE,IAAtCZ,EAAqC,EAArCA,GAAIL,EAAiC,EAAjCA,KAAME,EAA2B,EAA3BA,OAAQgB,EAAmB,EAAnBA,gBAC3C,OACE,+BACE,8BACGlB,EADH,KACWE,KAEX,wBAAQQ,KAAK,SAASS,QAAS,kBAAMD,EAAgBb,IAArD,wBCgBSe,G,MArBK,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,MAAOH,EAAsB,EAAtBA,gBAC5B,OACE,6BACGG,EAAMC,KAAI,gBAAGjB,EAAH,EAAGA,GAAIL,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OACT,cAAC,EAAD,CAEEG,GAAIA,EACJL,KAAMA,EACNE,OAAQA,EACRgB,gBAAiBA,GAJZb,UCQAkB,G,MAdA,SAAC,GAAyB,IAAvBZ,EAAsB,EAAtBA,MAAOa,EAAe,EAAfA,SACvB,OACE,0DAEE,uBAAOd,KAAK,OAAOV,KAAK,SAASW,MAAOA,EAAOC,SAAUY,SC4ChDC,MA9Cf,WACE,MAAgC1B,oBAC9B,kCAAM2B,KAAKC,MAAMC,OAAOC,aAAaC,QAAQ,oBAA7C,QAA6D,MAD/D,mBAAOC,EAAP,KAAiBC,EAAjB,KAGA,EAA4BjC,mBAAS,IAArC,mBAAOkC,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACRP,OAAOC,aAAaO,QAAQ,WAAYV,KAAKW,UAAUN,MACtD,CAACA,IAEJ,IAgBMO,EARiB,WACrB,IAAMC,EAAoBN,EAAOO,cAEjC,OAAOT,EAASE,QAAO,SAAAQ,GAAO,OAC5BA,EAAQzC,KAAKwC,cAAcE,SAASH,MAIfI,GAEzB,OACE,sBAAKC,UAAU,MAAf,UACE,2CACA,cAAC,EAAD,CAAa9C,SArBS,SAAA+C,GACxBd,EAASe,MACP,SAAAL,GAAO,OAAIA,EAAQzC,KAAKwC,gBAAkBK,EAAK7C,KAAKwC,iBAElDO,MAAM,iCACNf,GAAY,SAAAD,GAAQ,4BAAQA,GAAR,CAAkBc,UAiBxC,0CACA,cAAC,EAAD,CAAQlC,MAAOsB,EAAQT,SAAU,SAAAhB,GAAC,OAAI0B,EAAU1B,EAAEK,cAAcF,UAChE,cAAC,EAAD,CACEU,MAAOiB,EACPpB,gBAAiB,SAAAb,GACf2B,GAAY,SAAAD,GAAQ,OAClBA,EAASE,QAAO,SAAAQ,GAAO,OAAIA,EAAQpC,KAAOA,eCvCtD2C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.e7fc704d.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { nanoid } from 'nanoid';\n\nimport './ContactForm.module.css';\n\nfunction ContactForm({ onSubmit }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const [id, setId] = useState(() => nanoid());\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    setId(nanoid());\n    onSubmit({ name, number, id });\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n    setId(nanoid());\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          onChange={e => setName(e.currentTarget.value)}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </label>\n      <label>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={e => setNumber(e.currentTarget.value)}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </label>\n      <button>Add contact</button>\n    </form>\n  );\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default ContactForm;\n","import PropTypes from 'prop-types';\n\nimport './ContactListItem.module.css';\n\nfunction ContactListItem({ id, name, number, onDeleteContact }) {\n  return (\n    <li>\n      <p>\n        {name}: {number}\n      </p>\n      <button type=\"button\" onClick={() => onDeleteContact(id)}>\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactListItem.propTypes = {\n  id: PropTypes.string,\n  name: PropTypes.string,\n  number: PropTypes.string,\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactListItem;\n","import PropTypes from 'prop-types';\n\nimport ContactListItem from '../ContactListItem';\nimport './ContactList.module.css';\n\nconst ContactList = ({ items, onDeleteContact }) => {\n  return (\n    <ul>\n      {items.map(({ id, name, number }) => (\n        <ContactListItem\n          key={id}\n          id={id}\n          name={name}\n          number={number}\n          onDeleteContact={onDeleteContact}\n        />\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string)),\n  onDeleteContact: PropTypes.func,\n};\n\nexport default ContactList;\n","import PropTypes from 'prop-types';\n\nimport './Filter.module.css';\n\nconst Filter = ({ value, onFilter }) => {\n  return (\n    <label>\n      Find contacts by name\n      <input type=\"text\" name=\"filter\" value={value} onChange={onFilter} />\n    </label>\n  );\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onFilter: PropTypes.func,\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from 'react';\n\nimport ContactForm from './components/ContactForm';\nimport ContactList from './components/ContactList';\nimport Filter from './components/Filter';\n\nfunction App() {\n  const [contacts, setContacts] = useState(\n    () => JSON.parse(window.localStorage.getItem('contacts')) ?? [],\n  );\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    window.localStorage.setItem('contacts', JSON.stringify(contacts));\n  }, [contacts]);\n\n  const formSubmitHandler = data => {\n    contacts.find(\n      contact => contact.name.toLowerCase() === data.name.toLowerCase(),\n    )\n      ? alert('This name already in contacts')\n      : setContacts(contacts => [...contacts, data]);\n  };\n\n  const filterContacts = () => {\n    const filterToLowerCase = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterToLowerCase),\n    );\n  };\n\n  const filteredContacts = filterContacts();\n\n  return (\n    <div className=\"App\">\n      <h1>Phonebook</h1>\n      <ContactForm onSubmit={formSubmitHandler} />\n      <h2>Contacts</h2>\n      <Filter value={filter} onFilter={e => setFilter(e.currentTarget.value)} />\n      <ContactList\n        items={filteredContacts}\n        onDeleteContact={id => {\n          setContacts(contacts =>\n            contacts.filter(contact => contact.id !== id),\n          );\n        }}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}